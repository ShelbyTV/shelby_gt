<header class="shelby-header signup-popup__head clearfix" role="banner">
  <h1 class="shelby-title ir">
    Shelby.tv
  </h1>
</header>
<div class="signup-popup__body">
  <div class="signup-popup__lining">
    <%= form_for :user, :html => {:class => "js-form--signup-popup form_module form_module--signup-popup"}, :url => session_url(:user, :protocol => 'https') do |f| %>
      <h1 class="signup-popup__h1">  
        Sign up to comment on <%= @domain %>
      </h1>

      <fieldset class="form_fieldset">
        <%= f.label :name, :class => "form_label" %>
        <%= f.text_field :name, :class => "form_input" %>
      </fieldset>

      <fieldset class="form_fieldset">
        <%= f.label :nickname, "Username", :class => "form_label" %>
        <% if @nickname_error %>
          <span class="form_error js-invite-username-error" style="display: block;">Sorry, that username is already taken.</span>
        <% else %>
          <span class="form_error js-invite-username-error"></span>
        <% end %>
        <%= f.text_field :nickname, :class => "form_input" %>
      </fieldset>

      <fieldset class="form_fieldset">
        <%= f.label :primary_email, "Email", :class=>"foo bar", :class => "form_label" %>
        <% if @email_error %>
          <span class="form_error js-invite-email-error" style="display: block;">Sorry, that email is already taken.</span>
        <% else %>
          <span class="form_error js-invite-email-error"></span>
        <% end %>
        <%= f.email_field :primary_email, :class => "form_input" %>
      </fieldset>

      <fieldset class="form_fieldset">
        <%= f.label :password, :class => "form_label" %>
        <%= f.password_field :password, :class => "form_input" %>
      </fieldset>

      <fieldset class="form_fieldset">
        <%= f.submit "Sign me up!", :class => "button_primer button_blue form_submit" %>
      </fieldset>
    <% end %>

    <h2 class="signup-popup__h2">
      What's Shelby?
    </h2>

    <p>
      Shelby is a new way to discover video. Here is some more copy that makes the form look more legit.
    </p>
  </div><!-- eo signup-popup__lining -->
</div><!-- eo signup-popup__body -->
<script>
  //carried over form configs
  if (typeof(shelby) == 'undefined') {
    shelby = {};
  }
  if (typeof(shelby.config) == 'undefined') {
    shelby.config = {};
  }
  shelby.config.user = {
    email : {
      validationRegex : /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i
    },
    password : {
      minLength : 5
    }
  };
</script>

<script>
  //business
  $(document).ready(function(){
    $('.js-form--signup-popup').on('submit', function(e){
      //XXX for devving:
      e.preventDefault();

      //class names used more-than-once
      var formFieldset = '.form_fieldset',
          formFieldsetError = 'form_fieldset--error';

      var hasErrors = false;
      var signupName = $('#user_name');
      var signupUsername = $('#user_nickname');
      var signupEmail = $('#user_primary_email');
      var signupPassword = $('#user_password');
      // validate user full name
      if(!signupName.val().length) {
        signupName.parent(formFieldset).addClass(formFieldsetError)
                  .find('.form_error').text('Please enter your name');
        hasErrors = true;
      } else {
        signupName.parent(formFieldset).removeClass(formFieldsetError);
      }

      // validate username
      if(!signupUsername.val().length) {
        signupUsername.parent(formFieldset).addClass(formFieldsetError)
                      .find('.form_error').text('Please enter a username');
        hasErrors = true;
      } else {
        signupUsername.parent(formFieldset).removeClass(formFieldsetError);
      }

      // validate password
      // var password
      if(signupPassword.val().length < shelby.config.user.password.minLength) {
        signupPassword.parent(formFieldset).addClass(formFieldsetError)
                      .find('.form_error').text('Password must be at least ' + shelby.config.user.password.minLength + ' characters long');
        hasErrors = true;
      } else {
        signupPassword.parent(formFieldset).removeClass(formFieldsetError);
      }

      // validate email
      if(!signupEmail.val().length || signupEmail.val().search(shelby.config.user.email.validationRegex) == -1) {
        signupEmail.parent(formFieldset).addClass(formFieldsetError)
                   .find('.form_error').text('Please enter a valid email.');
        hasErrors = true;
      } else {
        signupEmail.parent(formFieldset).removeClass(formFieldsetError);
      }

      if (hasErrors) {
        e.preventDefault();
      } else {
        // save the user's input in a session cookie so we can re-render it if API redirects us back
        // here with errors the user needs to fix
        cookies.set('_shelby_signup_name', signupName.val());
        cookies.set('_shelby_signup_username', signupUsername.val());
        cookies.set('_shelby_signup_email', signupEmail.val());
      }
    });
  });
</script>

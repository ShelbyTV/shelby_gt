function loadScript(url, callback){
		var body = document.getElementsByTagName("body")[0];
		var script = document.createElement("script");
		script.src = url;
		// Attach handlers for all browsers
		var done = false;
		script.onload = script.onreadystatechange = function()
		{
				if( !done && ( !this.readyState 
										|| this.readyState == "loaded" 
										|| this.readyState == "complete") )
				{
						done = true;
						callback();
						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;
						body.removeChild( script );
				}
		};
		body.appendChild(script);
};

loadScript('https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js', function(){

	window.shelbyVideo = {};
	var	shelbyJ = jQuery.noConflict(),
			possibleVideos = { 
				embeds : shelbyJ('embed'),
				objects : shelbyJ('object'),
				videos : shelbyJ('video'),
				iframes : shelbyJ('iframe')
			};
	
	
	<% if @use_case == "bookmarklet" %>	
		// load jqui for animations
		shelbyJ.getScript("https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.min.js", function(){
			shelbyJ('#shelby-bookmarklet').show('slide', {direction : 'left'}, 'fast');
		});
	<% end %>


	// GLOBAL SHELBY CALLBACKS //
	window.shelbySignedInCallback = function(response){
		window.shelbySignedIn = response.signed_in ? true : false;
		if (response.signed_in == false){ console.error("You need to sign into Shelby first."); }
		else {
			shelbyRadar.getUser(shelbyJ, 'shelbyUserCallback');
		}
	};
	
        window.shelbyUserCallback = function(response){
                console.log(response);
		window.shelbyUser = response;
		shelbyRadar.sendVidsToShelby(foundVideo, response, shelbyJ);
	};
	
	window.shelbyRequestCallback = function(response){
		console.log("Shelby GT response:", response);
		
		if (typeof response.id !== 'undefined' ){
			document.title = document.title.slice(14);
			var url = "http://gt.shelby.tv/roll/"+response.roll_id+"/frame/"+response.id
			console.log("WE GOT ONE!", url);
		}
		else { console.error("something got tripped up somewhere. :/"); }
	};
	
	// end global callbacks //
	
	window.shelbyRadar = {
                  signedIn: function(shelbyJ){
                        console.log("signing in");
			shelbyJ.ajax({
				type : 'GET',
				url : 'http://<%= Settings::VideoRadar.domain %>/v1/signed_in',
				dataType : "jsonp",
				crossDomain: true,
				xhrFields: {withCredentials: true},
				jsonpCallback : 'shelbySignedInCallback'
			});
		},
		
		getUser: function(shelbyJ, callback){
			shelbyJ.ajax({
				type : 'GET',
				url : 'http://<%= Settings::VideoRadar.domain %>/v1/user',
				dataType : "jsonp",
				crossDomain: true,
				xhrFields: {withCredentials: true},
				jsonpCallback : callback
			});
		},
		
		find : function(possibleVideos, shelbyJ){		
			var videos_to_add = [];
			var found_elements = [];
			for (var i = 0; i < possibleVideos.embeds.length; i++) { found_elements.push(possibleVideos.embeds[i]); }
			for (var i = 0; i < possibleVideos.videos.length; i++) { found_elements.push(possibleVideos.videos[i]); }
			for (var i = 0; i < possibleVideos.iframes.length; i++) { found_elements.push(possibleVideos.iframes[i]); }
			for (var i = 0; i < possibleVideos.objects.length; i++) {
				if ((/<embed/i.test(possibleVideos.objects[i].innerHTML) || possibleVideos.embeds.length == 0) && (/<object/i.test(possibleVideos.objects[i].innerHTML))){
					found_elements.push(possibleVideos.objects[i]);
				}
				// for vimeo objects
				else if ((/<embed/i.test(possibleVideos.objects[i].innerHTML) || possibleVideos.embeds.length == 0) && (/vimeo/i.test(possibleVideos.objects[i].innerHTML))){
					found_elements.push(possibleVideos.objects[i]);
				}
				// for tech crunch and bloomberg ooyala objects
				else if ((/<embed/i.test(possibleVideos.objects[i].innerHTML) || possibleVideos.embeds.length == 0) && (/ooyala/i.test(possibleVideos.objects[i].innerHTML))){
					found_elements.push(possibleVideos.objects[i]);
				}
			}

			for (var i = 0; i < found_elements.length; i++){
				if (this.getElementValue(found_elements[i], 'data-youtube-id', shelbyJ)){
					var obj = jQuery(found_elements[i]);
					videos_to_add.push({
						embed: obj,
						domain: "youtube.com",
						video_id: this.getElementValue(found_elements[i], 'data-youtube-id', shelbyJ)
					});
				}
				else {
					var str = this.getElementValue(found_elements[i], 'flashvars', shelbyJ) + '&amp;' + this.getElementValue(found_elements[i], 'src', shelbyJ) + this.getElementValue(found_elements[i], 'data', shelbyJ) + this.getElementValue(found_elements[i], 'name', shelbyJ) + found_elements[i].innerHTML + found_elements[i].id;
					for (var j = 0; j < this.knownProviders.length; j++){
						for (var k = 0; k < this.knownProviders[j].regex.length; k++){
							var reg = new RegExp(this.knownProviders[j].regex[k]);
							var domain_split = this.knownProviders[j].domain.split(',');
							var valid_domain = false;
							for (var l = 0; l < domain_split.length; l++) {
								var domain_reg = new RegExp(jQuery.trim(domain_split[l]));
								if (domain_reg.test(str) || domain_reg.test(window.location)) {
									valid_domain = true;
									break;
								}
							}
							if (reg.test(str) && valid_domain) {

								var match = reg.exec(str);
								var obj = jQuery(found_elements[i]);
								if (obj.width() == 0){ obj = obj.parent(); }
								if (match[2] == undefined){
									if (match[1] == undefined){ match[1] = window.location.href; }
									match[2] = match[1];
								}							
								videos_to_add.push({
									embed: obj,
									domain: this.knownProviders[j].domain,
									video_id: match[2],
									known_url: this.composeKnownUrl(this.knownProviders[j].domain, match[2])
								});
								break;
							}
						}
					}
				}				
			}

			return videos_to_add;
		},

		getElementValue: function(obj, id, shelbyJ){
			var value = '';
			for (var i = 0; i < obj.attributes.length; i++) {	
				if (obj.attributes[i].nodeName === id) {
					value += obj.attributes[i].nodeValue;
					break;
				}
			}

			var params = shelbyJ(obj).children('param');
			for (var i = 0; i < params.length; i++) {
				if (params[i].name == id) {
					value += params[i].value;
					break;
				}
			}
			return value;
		},

		shelbyRequest: function(vid, user, shelbyJ, callback){
			if (typeof callback === 'undefined'){ callback = "shelbyRequestCallback" };			

			reqData = { 
									'url' : document.URL,
									'text' : "I found this video!"
								}

			shelbyJ.ajax({
				type : 'GET',
				url : 'http://<%= Settings::VideoRadar.domain %>/v1/roll/'+shelbyUser.personal_roll_id+'/new_frame',
				dataType : "jsonp",
				async : true,
				data : reqData,
				xhrFields: {withCredentials: true},
				jsonpCallback : callback
			});
		},

		sendVidsToShelby: function(vids, user, shelbyJ){
			var self = this;

			if(vids.length === 0) {
				this.noVidsFound(shelbyJ);
			} else {
	  		for (var i = 0; i < vids.length; i++){
					if (vids[i].known_url !== false){
						var r = Math.floor(Date.now()+Math.random()), vpos = jQuery(vids[i].embed).offset().top, hpos = jQuery(vids[i].embed).offset().left - 42;
						var bcastClass = "bcast-"+vids[i].video_id;

						shelbyJ('body').append('<div class="shelby-found-video-' + r + ' shelby-bookmarklet-video-tab"></div>');
						shelbyJ('.shelby-found-video-'+r).html('<img id="watchLoad-' + r + '" class="aniImg '+bcastClass+'-watch-later" style="position:relative;top:5px;left:1px;display:inline;cursor:pointer;" src="http://<%= Settings::VideoRadar.domain %>/assets/bkmklt-wl-purple.png"/><img id="loveTab-'+r+'" class="aniImg '+bcastClass+'-like" style="position:relative;top: 5px;left:1px;display:inline;cursor:pointer;" src="http://<%= Settings::VideoRadar.domain %>/assets/bkmklt-like-grey.png"/><img id="logoTab" class="aniImg '+bcastClass+'-logo" style="position:relative;top: 5px;left:1px;display:inline;cursor:pointer;" src="http://<%= Settings::VideoRadar.domain %>/assets/bkmklt-logo.png"/>')
						.css("position", "absolute")
						.css("left", hpos+"px")
						.css("top", vpos+"px")
						.css("z-index", "99999")
						.css("background-image", "url(http://<%= Settings::VideoRadar.domain %>/assets/bkmklt-tabBG.png)")
						.css('background-repeat', 'no-repeat')
						.css("width", "42px")
						.css('height', '138px')
						.css('margin-top', '15px')
						.css('outline', '0px')
			l		.hide();

						if (vids[i].known_url && vids[i].known_url.slice(0, 19) == "http://www.hulu.com") {
							var vpos = jQuery(vids[i].embed).offset().top + 342;
							shelbyJ('.shelby-bookmarklet-video-tab').css("left", "36%").css("top", vpos + "px")
											.css('-webkit-transform', 'rotate(-90deg)');
							shelbyJ('.'+bcastClass+'-logo').css("top","12px")
											.css('-webkit-transform','rotate(-270deg)');
							shelbyJ('.'+bcastClass+'-like').css('-webkit-transform','rotate(-270deg)');
							shelbyJ('.'+bcastClass+'-watch-later').css('-webkit-transform','rotate(-270deg)');
						}				


						/* change opacity of hoverable items */
						shelbyJ(".aniImg").hover(function(){ jQuery(this).css({ opacity: 1.0 }); },
							function(){ shelbyJ(this).css({ opacity: 0.8 }); 
						});

						/* send request to shelby backend */
						this.shelbyRequest(vids[i], user, shelbyJ);
					}
					else { this.noVidsFound(shelbyJ); }
				}
			}
		},

		markVidsToSendLater: function(vids, shelbyJ){
			var self = this;

			window.shelbyVideo.array = vids;
			if (vids.length === 0) { this.noVidsFound(shelbyJ); }
			else {
	  		for (var i = 0; i < vids.length; i++){
					if (vids[i].known_url !== false){
						var vid = window.shelbyVideo.array[i];
						var r = Math.floor(Date.now()+Math.random()), vpos = jQuery(vid.embed).offset().top, hpos = jQuery(vid.embed).offset().left - 42;
						var bcastClass = "bcast-"+ vid.domain.slice(0,-4) + "-" + vid.video_id;

						shelbyJ('body').append('<div class="shelby-found-video-' + vid.video_id + ' shelby-bookmarklet-video-tab"></div>');
						shelbyJ('.shelby-found-video-'+vid.video_id).html('<img id="watchLoad-' + vid.video_id + '" class="aniImg '+bcastClass+'-watch-later" title="add this video to watch later" style="position:relative;top:5px;left:1px;display:inline;cursor:pointer;" src="http://<%= Settings::VideoRadar.domain %>/assets/bkmklt-wl-grey.png"/><img id="loveTab-'+vids.video_id+'" class="aniImg '+bcastClass+'-like" style="position:relative;top: 5px;left:1px;display:inline;cursor:pointer;" title="favorite this video" src="http://<%= Settings::VideoRadar.domain %>/assets/bkmklt-like-grey.png"/><img id="logoTab" class="aniImg '+bcastClass+'-logo" style="position:relative;top: 5px;left:2px;display:inline;cursor:pointer;" title="view this video on Shelby!" src="http://<%= Settings::VideoRadar.domain %>/assets/bkmklt-logo.png"/>')
						.css("position", "absolute")
						.css("left", hpos+"px")
						.css("top", vpos+"px")
						.css("z-index", "99999")
						.css("background-image", "url(http://<%= Settings::VideoRadar.domain %>/assets/bkmklt-tabBG.png)")
						.css('background-repeat', 'no-repeat')
						.css("width", "42px")
						.css('height', '138px')
						.css('margin-top', '15px')
						.css('outline', '0px');

						if (vid.known_url && vid.known_url.slice(0, 19) == "http://www.hulu.com") {
							var vpos = jQuery(vid.embed).offset().top + 342;
							shelbyJ('.shelby-bookmarklet-video-tab').css("left", "36%").css("top", vpos + "px")
											.css('-webkit-transform', 'rotate(-90deg)');
							shelbyJ('.'+bcastClass+'-logo').css("top","12px")
											.css('-webkit-transform','rotate(-270deg)');
							shelbyJ('.'+bcastClass+'-like').css('-webkit-transform','rotate(-270deg)');
							shelbyJ('.'+bcastClass+'-watch-later').css('-webkit-transform','rotate(-270deg)');
						}				

						/* change opacity of hoverable items */
						shelbyJ(".aniImg").hover(function(){ jQuery(this).css({ opacity: 1.0 }); },
							function(){ shelbyJ(this).css({ opacity: 0.8 }); 
						});

						/* binding click for SHELBY LOGO */
						shelbyJ('.'+bcastClass+"-logo").on("click", function(e){
							// check to see if this video was added, if so, don't add it again.
							var _vid_info = (/bcast-(\S*)-logo/).exec(e.target.className)[1];
							var _vid_provider = _vid_info.split("-")[0] + '.com';
							var _vid_id = _vid_info.split("-")[1];
							var _url = self.composeKnownUrl(_vid_provider, _vid_id);
							var _cloned_vid = {domain: _vid_provider, video_id: _vid_id, known_url: _url};

							if (typeof window.shelbyVideo[_vid_id] == "undefined"){
								self.shelbyRequest(_cloned_vid, shelbyJ, "shelbyExtensionLogoCallback");
							}
							else {
								window.location.href = window.shelbyVideo[_vid_id].permalink;
							}
						});

						/* binding click for FAVORITING  */
						shelbyJ('.'+bcastClass+'-like').on("click", function(e){
							var _vid_info = (/bcast-(\S*)-like/).exec(e.target.className)[1];
							var _vid_provider = _vid_info.split("-")[0] + '.com';
							var _vid_id = _vid_info.split("-")[1];
							if (typeof _vid_info.split("-")[2] !== 'undefined') {
								_vid_id = _vid_id + '-' + _vid_info.split("-")[2];
							}
							var _url = self.composeKnownUrl(_vid_provider, _vid_id);

							var _cloned_vid = {domain: _vid_provider, video_id: _vid_id, known_url: _url};

							shelbyJ(this).addClass('shelby-request');
							window.shelbyRequestWaiting("bcast-"+_vid_id+"-like", 200);
							if (typeof window.shelbyVideo[_vid_id] == "undefined"){
								window.shelbyVideo[_vid_id] = {favorited: true};
								self.shelbyRequest(_cloned_vid, shelbyJ, "shelbyExtensionLikeCallback");	
							}
							else{
								broadcast_id = window.shelbyVideo[_vid_id].id
								var favorited = !window.shelbyVideo[_vid_id].favorited;
								window.shelbyVideo[_vid_id].favorited = favorited;
								shelbyJ.ajax({
									type : 'GET',
									url : 'http://<%= Settings::VideoRadar.domain %>/broadcast/put/'+broadcast_id,
									dataType : "jsonp",
									jsonpCallback: "shelbyLikeCallback",
									data : {'liked_by_owner' : favorited }
								});
							}
						});

						/* binding click for WATCH LATER  */
						shelbyJ('.'+bcastClass+"-watch-later").on("click", function(e){
							var _vid_info = (/bcast-(\S*)-watch-later/).exec(e.target.className)[1];
							var _vid_provider = _vid_info.split("-")[0] + '.com';
							var _vid_id = _vid_info.split("-")[1];
							var _url = self.composeKnownUrl(_vid_provider, _vid_id);

							var _cloned_vid = {domain: _vid_provider, video_id: _vid_id, known_url: _url};

							shelbyJ(this).addClass('shelby-request');
							window.shelbyRequestWaiting(bcastClass+"-watch-later", 200);
							if (typeof window.shelbyVideo[_vid_id] === "undefined"){
								window.shelbyVideo[_vid_id] = {watchLater: true};
								self.shelbyRequest(_cloned_vid, shelbyJ, "shelbyExtensionWatchLaterCallback");
							}
							else {
								broadcast_id = window.shelbyVideo[_vid_id].id
								var watchLater = !window.shelbyVideo[_vid_id].watchLater;
								window.shelbyVideo[_vid_id].watchLater = watchLater;
								shelbyJ.ajax({
									type : 'GET',
									url : 'http://<%= Settings::VideoRadar.domain %>/broadcast/put/'+broadcast_id,
									dataType : "jsonp",
									jsonpCallback: "shelbyWatchLaterCallback",
									data : {'owner_watch_later' : watchLater }
								});
							}
						});
					}
					else { self.noVidsFound(shelbyJ); }
				}
			}
		},

		noVidsFound: function(shelbyJ){
			<% if @use_case == "bookmarklet" %>
				document.title = document.title.slice(14);
			<% end %>
			shelbyJ("#shelby-bookmarklet").html('<div style="position:absolute;top:10px;left:4px;color:#f3f3f3;"><span style="float:left;font-size: 12px;font-family: verdana,sans-serif;">No videos found...</span><a href="http://<%= Settings::VideoRadar.domain %>"><img style="position:absolute;left:140px;top:-13px;" src="http://<%= Settings::VideoRadar.domain %>/assets/bkmklt-logo.png"/></a></div>');
		},

		composeKnownUrl: function(domain, video_id){
			var known_url = "";
			switch (domain){
			case 'youtube.com':
				known_url = "http://www.youtube.com/watch?v=" + video_id;
				break;
			case 'dailymotion.com':
				known_url = "http://www.dailymotion.com/video/" + video_id;
				break;
			case 'vimeo.com':
				known_url = "http://vimeo.com/" + video_id;
				break;
			case 'techcrunch.tv':
				known_url = "http://techcrunch.tv/watch?id=" + video_id;
				break;
			case 'collegehumor.com':
				known_url = "http://collegehumor.com/video/" + video_id;
				break;
			case 'hulu.com':
				//HACK (For now).
				// the video_id is the content_id, not useful when hitting embedly or our link cache
				// so using the page location for now
				known_url = document.location.href;
				break;
			case 'bloomberg.com':
				//HACK (For now).
				// so using the page location for now
				known_url = document.location.href;
				break;
			default:
				known_url = false;
			}
			return known_url;
		},
		
		knownProviders : [
			{ "domain": "blip.tv", "regex": ["flash\\\/stratos\\.swf", "http:\\\/\\\/blip\\.tv\\\/play\\\/"] },
			{ "domain": "brightcove.com", "regex": ["brightcove.com\\\/services\\\/viewer"] },
			{ "domain": "collegehumor.com", "regex": ["videoid([0-9]+)", "clip_id=([0-9]+)"] },
			{ "domain": "dailymotion.com", "regex": ["videoId%22%3A%22([a-zA-Z0-9]+)", "dailymotion.com%2Fvideo%2F([a-zA-Z0-9]+)_", "dailymotion\\.com\\\/embed\\\/video\\/([a-zA-Z0-9]+)", "dailymotion\\.com\\\/swf\\\/([a-zA-Z0-9]+)", "www.dailymotion.com\\\/video\\\/([a-zA-Z0-9]+)_"] },
			/*{ "domain": "hulu.com", "regex": ["http:\\\/\\\/player\\.hulu\\.com\\\/express\\\/.*?"] },*/
			{ "domain": "hulu.com", "regex": ["\/site-player\/(\\d*)\/player"] },
			{ "domain": "video.pbs.org", "regex": ["width=512&height=288&video=.*?\\\/([0-9]+)"] },
			{ "domain": "techcrunch.tv", "regex": ["embedCode=(\\w*)"] },
			{ "domain": "ted.com", "regex": ["&amp;su=(http:\\\/\\\/www\\.ted\\.com.*?\\.html)&amp;", "&su=(http:\\\/\\\/www\\.ted\\.com.*?\\.html)&", "vu=http:\\\/\\\/video\\.ted\\.com\\\/.*?&su"] },
			{ "domain": "vimeo.com", "scrape_url": "http:\\\/\\\/(?:\\w+\\.)*vimeo\\.com\\\/([0-9]+)|http:\\\/\\\/(?:\\w+\\.)*vimeo\\.com.*clip_id=([0-9]+)", "regex": ["vimeo\\.com\\\/moogaloop\\.swf\\?clip_id=([0-9]+)", "clip_id=([0-9]+)&server=vimeo\\.com", "clip_id=([0-9]+)", "(player.vimeo.com\\/video\\/)(\\d*)", "(player)(\\d*)"] },
			{ "domain": "youtube.com", "scrape_url": "http:\\\/\\\/(?:\\w+\\.)*youtube\\.com.*v=([\\_\\-a-zA-Z0-9]+)", "regex": ["&video_id=([\\_\\-a-zA-Z0-9]+)", "youtube\\.com\/v\/([\\_\\-a-zA-Z0-9]+)", "youtube\\-nocookie\\.com\/v\/([\\_\\-a-zA-Z0-9]+)", "youtube\\.com\/embed\/([\\_\\-a-zA-Z0-9]+)"] },
			{ "domain": "bloomberg.com", "regex": ["embedCode=(\\w*)"] }
		]
		
	};
	
	var foundVideo = shelbyRadar.find(possibleVideos, shelbyJ);
	
	shelbyRadar.signedIn(shelbyJ);
	
});
